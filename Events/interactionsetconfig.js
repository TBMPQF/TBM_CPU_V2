const {
  Discord,
  EmbedBuilder,
  ButtonBuilder,
  ActionRowBuilder,
  ButtonStyle,
} = require("discord.js");
const ServerConfig = require("../models/serverConfig");

module.exports = {
  name: "setConfigCustomID",
  async execute(interaction) {
    const serverID = interaction.guild.id;
    const serverConfig = await ServerConfig.findOne({ serverID: serverID });

    if (interaction.isStringSelectMenu()) {
      const selectedOption = interaction.values[0];

      switch (selectedOption) {
        case "LOG":
          const logEmbed = new EmbedBuilder()
            .setTitle("`‰∏®ùêÇonfiguration ùêãog‰∏®`")
            .setDescription(
              `Salon qui te permettra de suivre l'actualit√© du serveur (Quand quelqu'un r√©cup√®re son daily, quand quelqu'un quitte ton serveur, suivre les suggestions ... )\n\nModifie le salon ou carr√©ment d√©sactive les ùêãogs de ton serveur.\n\nSalon actuel : \`${serverConfig.logChannelName}\``
            )
            .setThumbnail(
              "https://images.emojiterra.com/google/android-12l/512px/1f4dd.png"
            )
            .setColor("#b3c7ff");
          const rowLog = new ActionRowBuilder()
            .addComponents(
              new ButtonBuilder()
                .setCustomId("LOG_BUTTON")
                .setEmoji("üìù")
                .setLabel("Modifi√© Salon")
                .setStyle(ButtonStyle.Primary)
            )
            .addComponents(
              new ButtonBuilder()
                .setCustomId("LOG_DESAC")
                .setEmoji("‚ùå")
                .setLabel("D√©sactiv√©")
                .setStyle(ButtonStyle.Danger)
            );
          await interaction.reply({ embeds: [logEmbed], components: [rowLog] });

          break;

          case "ROLECHANNEL":
            const roleChannelEmbed = new EmbedBuilder()
              .setTitle("`‰∏®ùêÇonfiguration du salon ùêë√¥les‰∏®`")
              .setDescription(
                `Salon ou tu permets √† tes utilisateurs de prendre leurs r√¥les de jeu, une fois enregistrer, il s'affichera surtout dans le message ùêñelcome.\nModifie ou carr√©ment d√©sactive le salon des ùêë√¥les de ton serveur.\n\nSalon actuel : \`${serverConfig.roleChannelName}\``
              )
              .setThumbnail(
                "https://www.numerama.com/wp-content/uploads/2020/03/role-playing-game-2536016_1920.jpg"
              )
              .setColor("#b3c7ff");
            const rowroleChannel = new ActionRowBuilder()
              .addComponents(
                new ButtonBuilder()
                  .setCustomId("ROLECHANNEL_BUTTON")
                  .setEmoji("üìù")
                  .setLabel("Modifi√© Salon")
                  .setStyle(ButtonStyle.Primary)
              )
              .addComponents(
                new ButtonBuilder()
                  .setCustomId("ROLECHANNEL_DESAC")
                  .setEmoji("‚ùå")
                  .setLabel("D√©sactiv√©")
                  .setStyle(ButtonStyle.Danger)
              );
            await interaction.reply({ embeds: [roleChannelEmbed], components: [rowroleChannel] });
  
            break;

        case "REGLEMENT":
          const reglementEmbed = new EmbedBuilder()
            .setTitle("`‰∏®ùêÇonfiguration ùêë√®glement‰∏®`")
            .setDescription(
              `Le salon ou tu affiche le ùêë√®glement de ton serveur Discord.\n\nModifie le salon ou carr√©ment d√©sactive le ùêë√®glement de ton serveur.\nTu peux √©galement modifi√© le r√¥le obtenu lors de la validation de ton ùêë√®glement.\n\n‚úîÔ∏è pour envoy√© le ùêë√®glement dans ton salon !\n\nSalon actuel : \`${serverConfig.reglementChannelName}\`\nR√¥le actuel : \`${serverConfig.roleReglementName}\``
            )
            .setThumbnail(
              "https://exalto-park.com/wp-content/uploads/2022/11/Reglement-interieur.png"
            )
            .setColor("#b3c7ff");
          const rowReglement = new ActionRowBuilder()
            .addComponents(
              new ButtonBuilder()
                .setCustomId("REGL_PUSH")
                .setEmoji("‚úîÔ∏è")
                .setLabel("Envoy√©")
                .setStyle(ButtonStyle.Success)
            )
            .addComponents(
              new ButtonBuilder()
                .setCustomId("REGL_BUTTON")
                .setEmoji("üìù")
                .setLabel("Modifi√© Salon")
                .setStyle(ButtonStyle.Primary)
            )
            .addComponents(
              new ButtonBuilder()
                .setCustomId("REGL_ROLE")
                .setEmoji("üïµ")
                .setLabel("Modifi√© R√¥le")
                .setStyle(ButtonStyle.Primary)
            )
            .addComponents(
              new ButtonBuilder()
                .setCustomId("REGL_DESAC")
                .setEmoji("‚ùå")
                .setLabel("D√©sactiv√©")
                .setStyle(ButtonStyle.Danger)
            );
          await interaction.reply({
            embeds: [reglementEmbed],
            components: [rowReglement],
          });

          break;

        case "WELCOME":
          const WELCOMEEmbed = new EmbedBuilder()
            .setTitle("`‰∏®ùêÇonfiguration ùêñelcome‰∏®`")
            .setDescription(
              `Message de bienvenue lorsque qu'un utilisateur rejoint ton serveur Discord.\n\nModifie le salon, le r√¥le attribu√© lors de l'arriv√© du membre ou carr√©ment d√©sactive le message de bienvenue de ton serveur.\n\nSalon actuel : \`${serverConfig.welcomeChannelName}\`\nR√¥le actuel : \`${serverConfig.roleWelcomeName}\``
            )
            .setThumbnail(
              "https://cdn.pixabay.com/photo/2016/03/31/21/33/greeting-1296493_1280.png"
            )
            .setColor("#b3c7ff");
          const rowWelcome = new ActionRowBuilder()
            .addComponents(
              new ButtonBuilder()
                .setCustomId("WELCOME_BUTTON")
                .setEmoji("üìù")
                .setLabel("Modifi√© Salon")
                .setStyle(ButtonStyle.Primary)
            ).addComponents(
              new ButtonBuilder()
                .setCustomId("WELCOME_ROLE")
                .setEmoji("üïµ")
                .setLabel("Modifi√© R√¥le")
                .setStyle(ButtonStyle.Primary)
            )
            .addComponents(
              new ButtonBuilder()
                .setCustomId("WELCOME_DESAC")
                .setEmoji("‚ùå")
                .setLabel("D√©sactiv√©")
                .setStyle(ButtonStyle.Danger)
            );
          await interaction.reply({
            embeds: [WELCOMEEmbed],
            components: [rowWelcome],
          });
          break;

        case "IMPLICATION":
          const IMPLICATIONEmbed = new EmbedBuilder()
            .setTitle("`‰∏®ùêÇonfiguration ùêàmplications‰∏®`")
            .setDescription(
              `Message qui s'affiche dans le salon que tu veux pour avertir ta communaut√© qu'un de tes membres vient de prendre un niveau !\n\nModifie le salon ou carr√©ment d√©sactive les messages d'exp√©rience de ton serveur.\nPour mieux faire, tu peux m√™me d√©sactiver les messages de bienvenue envoyer par Discord !\n\nSalon actuel : \`${serverConfig.implicationsChannelName}\``
            )
            .setThumbnail(
              "https://supermonday.io/wp-content/uploads/2023/01/brain-g13f32aaed_1920.png"
            )
            .setColor("#b3c7ff");
          const rowImplication = new ActionRowBuilder()
            .addComponents(
              new ButtonBuilder()
                .setCustomId("IMPLICATION_BUTTON")
                .setEmoji("üìù")
                .setLabel("Modifi√© Salon")
                .setStyle(ButtonStyle.Primary)
            )
            .addComponents(
              new ButtonBuilder()
                .setCustomId("IMPLICATION_DESAC")
                .setEmoji("‚ùå")
                .setLabel("D√©sactiv√©")
                .setStyle(ButtonStyle.Danger)
            );
          await interaction.reply({
            embeds: [IMPLICATIONEmbed],
            components: [rowImplication],
          });
          break;

        case "SUGGESTION":
          const SUGGESTIONEmbed = new EmbedBuilder()
            .setTitle("`‰∏®ùêÇonfiguration ùêíuggestions‰∏®`")
            .setDescription(
              `Un salon qui peut permettre a ta communaut√©e de proposer une am√©lioration √† ton serveur.\n__Chaque personne qui envoie un simple message sera transform√© directement en suggestion avec bouton pour pouvoir r√©agir__ !\n\nModifie le salon ou carr√©ment d√©sactive les ùêíuggestions de ton serveur.\n\nSalon actuel : \`${serverConfig.suggestionsChannelName}\``
            )
            .setThumbnail(
              "https://cdn-icons-png.flaticon.com/512/2118/2118247.png"
            )
            .setColor("#b3c7ff");
          const rowSugg = new ActionRowBuilder()
            .addComponents(
              new ButtonBuilder()
                .setCustomId("SUGG_BUTTON")
                .setEmoji("üìù")
                .setLabel("Modifi√© Salon")
                .setStyle(ButtonStyle.Primary)
            )
            .addComponents(
              new ButtonBuilder()
                .setCustomId("SUGG_DESAC")
                .setEmoji("‚ùå")
                .setLabel("D√©sactiv√©")
                .setStyle(ButtonStyle.Danger)
            );
          await interaction.reply({
            embeds: [SUGGESTIONEmbed],
            components: [rowSugg],
          });
          break;

        case "DAILY":
          const DAILYEmbed = new EmbedBuilder()
            .setTitle("`‰∏®ùêÇonfiguration ùêÉaily‰∏®`")
            .setDescription(
              `Permet √† toute ta communaut√©e de r√©cup√©rer un bonus quotidien d'exp√©rience de **200 XP**, r√©cup√©rable une fois __toute les 23H__. Un bonus cumulable de 2% sera appliqu√© au bout de 7 jours cons√©cutifs.\n\nModifie le salon ou carr√©ment d√©sactive le ùêÉaily de ton serveur.\n\n‚úîÔ∏è pour envoy√© le message de r√©cup√©ration de ùêÉaily dans ton salon !\n\nSalon actuel : \`${serverConfig.dailyChannelName}\``
            )
            .setThumbnail(
              "https://papycha.fr/wp-content/uploads/2019/08/84863418061.png"
            )
            .setColor("#b3c7ff");
          const rowDaily = new ActionRowBuilder()
            .addComponents(
              new ButtonBuilder()
                .setCustomId("DAILY_PUSH")
                .setEmoji("‚úîÔ∏è")
                .setLabel("Envoy√©")
                .setStyle(ButtonStyle.Success)
            )
            .addComponents(
              new ButtonBuilder()
                .setCustomId("DAILY_BUTTON")
                .setEmoji("üìù")
                .setLabel("Modifi√© Salon")
                .setStyle(ButtonStyle.Primary)
            )
            .addComponents(
              new ButtonBuilder()
                .setCustomId("DAILY_DESAC")
                .setEmoji("‚ùå")
                .setLabel("D√©sactiv√©")
                .setStyle(ButtonStyle.Danger)
            );
          await interaction.reply({
            embeds: [DAILYEmbed],
            components: [rowDaily],
          });
          break;

        case "ROLES":
          const ROLESEmbed = new EmbedBuilder()
            .setTitle("`‰∏®ùêÇonfiguration ùêë√¥les des niveaux‰∏®`")
            .setDescription("Gestion des r√¥les de niveau, tu peux modifi√© les r√¥les donn√© lorsque un utilisateur passe niveau 1, 2, 5, 10, 15, 20, 25, 30, 35, 40, 45 et 50. Tu peux faire cela sur le prestige 1 aussi.")
            .setThumbnail(
              "https://cdn-icons-png.flaticon.com/512/33/33056.png"
            )
            .setColor("#b3c7ff");
            
          const rowRoles = new ActionRowBuilder()
            .addComponents(
              new ButtonBuilder()
                .setCustomId("ROLE_LISTE")
                .setEmoji("üìÖ")
                .setLabel("Liste")
                .setStyle(ButtonStyle.Secondary)
            )
            .addComponents(
              new ButtonBuilder()
                .setCustomId("ROLES_DESAC")
                .setEmoji("‚ùå")
                .setLabel("D√©sactiv√©")
                .setStyle(ButtonStyle.Danger)
            );
          await interaction.reply({
            embeds: [ROLESEmbed],
            components: [rowRoles],
          });
          break;

          case "TICKET":
          const TICKETEmbed = new EmbedBuilder()
            .setTitle("`‰∏®ùêÇonfiguration ùêìicket‰∏®`")
            .setDescription(`Syst√®me de ùêìicket qui permettra √† tous tes utilisateurs lors d'un probl√®me d'ouvrir un salon disponible uniquement pour les mod√©rateurs. Ainsi il pourra exposer son probl√®me.\n\nModifie le salon ou carr√©ment d√©sactive les ùêìickets de ton serveur.\n\n‚úîÔ∏è pour envoy√© le message initial des ùêìickets dans ton salon !\n\nSalon actuel : \`${serverConfig.ticketChannelName}\`\nRole actuel : \`${serverConfig.ticketAdminRoleName}\``)
            .setThumbnail(
              "https://www.pngall.com/wp-content/uploads/12/Ticket-PNG-Free-Image.png"
            )
            .setColor("#b3c7ff");
            
          const rowTicket = new ActionRowBuilder()
            .addComponents(
              new ButtonBuilder()
                .setCustomId("TICKET_PUSH")
                .setEmoji("‚úîÔ∏è")
                .setLabel("Envoy√©")
                .setStyle(ButtonStyle.Secondary)
            ).addComponents(
              new ButtonBuilder()
                .setCustomId("TICKET_BUTTON")
                .setEmoji("üìù")
                .setLabel("Modifi√© Salon")
                .setStyle(ButtonStyle.Primary)
            ).addComponents(
              new ButtonBuilder()
                .setCustomId("TICKET_ROLE")
                .setEmoji("üëÆ‚Äç‚ôÇÔ∏è")
                .setLabel("Administrateur R√¥les")
                .setStyle(ButtonStyle.Primary)
            )
            .addComponents(
              new ButtonBuilder()
                .setCustomId("ROLES_DESAC")
                .setEmoji("‚ùå")
                .setLabel("D√©sactiv√©")
                .setStyle(ButtonStyle.Danger)
            );
          await interaction.reply({
            embeds: [TICKETEmbed],
            components: [rowTicket],
          });
          break;
        default:
          await interaction.reply("Option invalide");
          break;
      }
    }
  },
};
