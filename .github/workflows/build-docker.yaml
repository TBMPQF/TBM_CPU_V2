name: Construction de l'image docker

on:
  push:
    paths-ignore:
      - '.gitignore'
      - 'docker/*.yaml'
      - 'docker/*.env'
      - 'logs/**'
      - 'README.md'
  workflow_dispatch:
    inputs:
      version:
        description: "TAG: Numéro de version a appliquer au tag git et à l'image docker (optionnel)"
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Clone du Repos GitHub
        uses: actions/checkout@v3

      - name: Génération du fichier de version build-info.json
        run: |
          echo "{\"tag\": \"${{ github.event.inputs.version || env.BRANCH_NAME }}\", \"sha\": \"${{ github.sha }}\"}" > build-info.json

      - name: Preparation du nommage de l'image docker
        run: |
          echo "IMAGE_LOWER=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "BRANCH_NAME=$(echo '${{ github.ref }}' | sed 's|refs/[^/]*/||g' | tr '/' '-')" >> $GITHUB_ENV

      - name: Application du TAG sur l'image Docker, si présent
        if: github.event.inputs.version != ''
        run: |
          if git ls-remote --tags origin "${{ github.event.inputs.version }}" | grep -q "${{ github.event.inputs.version }}"; then
            echo "Tag ${{ github.event.inputs.version }} already exists on the remote."
            exit 0
          fi
      
      - name: Application du TAG sur le repos Git, si présent
        if: github.event.inputs.version != ''
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git tag -a "${{ github.event.inputs.version }}" -m "Release ${{ github.event.inputs.version }}"
          git push origin "${{ github.event.inputs.version }}"

      - name: Connection à la bibliothèque d'image Docker de GitHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Preparation à la construction de l'image Docker
        uses: docker/setup-buildx-action@v3

      - name: Construction de l'image Docker et Publication dans la bibliothèque GitHub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_LOWER }}:latest
            ghcr.io/${{ env.IMAGE_LOWER }}:${{ env.BRANCH_NAME }}
            ghcr.io/${{ env.IMAGE_LOWER }}:${{ github.sha }}
            ${{ github.event.inputs.version && format('ghcr.io/{0}:{1}', env.IMAGE_LOWER, github.event.inputs.version) || '' }}
